(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    103465,       2090]
NotebookOptionsPosition[     94581,       1931]
NotebookOutlinePosition[     95860,       1967]
CellTagsIndexPosition[     95724,       1960]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Wolfram\:8bed\:8a00\:4e13\:9898\:8bb2\:5ea7
\:673a\:5668\:5b66\:4e60\:548c\:4eba\:5de5\:667a\:80fd\
\>", "Title",
 CellChangeTimes->{{3.8226048377657423`*^9, 3.8226048659630027`*^9}, {
  3.822605627428836*^9, 3.8226056301481385`*^9}, {3.822689473616071*^9, 
  3.82268950480484*^9}, {3.822756038925295*^9, 3.8227560662611094`*^9}, {
  3.822909028487238*^9, 3.8229090518815536`*^9}},
 FontSize->48,ExpressionUUID->"0600c34d-2390-4ee6-9886-5388186f4a92"],

Cell[TextData[StyleBox["\:6768\:5723\:6c47 Wolfram Research Inc",
 FontSize->36]], "Author",
 CellChangeTimes->{{3.822604883372121*^9, 3.8226048991398025`*^9}, {
  3.82260530073917*^9, 3.822605330506364*^9}, {3.822605563257403*^9, 
  3.82260556664116*^9}, {3.82260637260452*^9, 
  3.8226063730596457`*^9}},ExpressionUUID->"a7481995-99ad-4013-bf43-\
0847f03f0904"],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsXQd8FMX3vzSKgAo21N/PLimXRgiE3nvvvUsRqQKioDQREBERkSq9SC+K
9F5SCCQhvVyu32277bu3d3sl+c/uJjFUAySov3/mM8Zw2X03M/vd1+a9N++O
nd53gq9KpZpVDfzoO+bzNjNnjpnb70XwjwHTZk2aOG38uC7TZo+fOH5m47F+
4MM08F8C+E/6vbCyVbbKVtn+XzaPx+N+/Ob1egsKCu6n5pXb307tgQSVzx93
vs+GGvjkCai5H750f3tT5uJ6zPYIJDwBwXKn9jAkPAE1cMszoKbg6nGpgesB
wWePK4/clHV+xl9d2f7GVsL9lKdf7vSLKMv9wQPwep0c52BogSIEkrCXoYPL
HDTpcjo9D6BZ4BLsDpYRKLL09Y+mBroo2MGrd+97VyBRc3JsaWp/OTYwEUDN
JYr3T9kjiiLPO2iq7DMF3cnzotN5D7UCmZrLLk3WTuKPsXQs6xQEwObuGRvg
U06HIC3dX61Y6Q6uF+281+269zFUAK4K5PbXPEp+iA6Oy7hyPvH4wRu7frm6
bf21HRulvn3DA/q2DVelvv7GtvW3DuwyZWZQNkxZH+UbpcURRX3KrZTTx+N+
3X7t0dS2b7i6XSIIqMXv3JSXGAdbzQ67vbBIb5EeotvpNN5JSj93Mm7vtr+m
tk0iKFHbtTnvVrxZl89SpELNoyC2oBDOz826ej7xyK9/SU0e3sbr2zbEbt+Q
fvWiNiujhJpbmbLXi+m1mpuxKX8cvbptnXTLo2a6EfQb2yVqyad/z066jSOI
sm4lbxNiNmUnJyWfPB67dd11+ZaHUbu+Y+P1nZuuy1935+Qx7c3rDAqVPIUH
SFh52A/805PgSpb9HofDzXMeGvdQhFfhMCXEFVxRZPqB7Qlrl1/9+rMrC6Zf
XjhD6uCXB/VL86dfnj/j6vxpCd8v1MVfx0wmwBaKv1HCsNsh6C6dStry4/Xl
8y7Pn6ZQu/QwauDnV9MBtdjFszLP/GbU5PAMU6jwWLeEK8ANdJdO39m5/sby
uSXUHja2KwtmXJn/KaB2Y8ns9NPHNXeSSARWqAEtREJVQYE1OQFMNn71kssL
pl15JDV5eDOuLphxY9GnSQd3p8deL6YGXh1Rmq3bjaan5J06mrT5BzA2cPEj
qc24BNZtwfTrC2ckbF17+/xpxKBTxibK2iD43ZiTdfvCmYTNa659NfXKgk/B
9Q+d6cIZVxd9Cn6CfnvLmuw/jlBGbSl+UqDA3gO0L6fTLQhuUXruBU+h3t/D
o9wuEcrLtlw/j25ZiW3+lkhPokkS8NuiMcgj8MImx+xBfN9we/s37S1f4pXe
4uG95cv2li8y/UIt+zaa79x28XwxEtzSoDlaXL9QGNWS7/KufPFfUWsBqNXh
279u/PErzdULLGKV4ORyAbkjUaMI5/rFwsQudolanTJQewVQ4zq+qVk1L/X4
fiw3Q6HmcDikZSnwuo5tc84ZYh9Qn29eFmov2cFk272a++X4hO3rbTmZgBoA
lUMQwBMqdInuswedK2YIH7WVxtbi5b+kxrd6mW/zSv7EbtdWLTbdilXGZrfb
FQaouXjqyqqvdeM6Ci1r861eeeQjkJ4C6FzbV+GJXbUr5jIpCdLjdgPdxOmW
ZSLPMpDZZMnLMd25TUGW0jznCexHb4np6xC8GOTUZFl+32fatAKZNQSdPRQ5
/xum07ocwl24QiyuL0c5hzV29qwndn5b7PyO0l33deVzZ9d3xS7/FUY0hg5t
taYlu2TJVRpXni3L3JM6u/qFOju/5XwkNelnF0DtbbHXh9b1S7Q3LvEoLK8P
eCFEQK2AJty/LHfN6OvqFyZ2fkvs8ihqziJq/3X2DtSv/Trz5BFbXtZduAIL
88du9/zRrpHNxE5vPWKmRZPt8o4T9O7v5S+ZkrR3C56XLeMKKEcyrtwuz8Wj
7tVzxMndnB3/gpo8tnfErm+L3d42zOgf9/O3lmQFCW4JV/KbrrtyLnbtt6Yp
vcTO/3F2fecRk1VWVRpbt/dsn/bXr1nMpt1SqIGZKijlrCZL7GXTycPGPRuI
6+fcsNnDkF7ZeHwsXJVwKnCLQ3TxZgO1cw21dDrRJ4Jp+x+x6Ytix7eQNV9a
zh8XSVthsT4vDYbnoCunDcf35u/ZkLdzbf7udfl71mv2rM+/r0sf7pb7rp/1
R3dgWWkMhnpKcT9pGC6RSEkwnzmSv39zrkQN3Ljh0dQ0u37O37vBeivWZjY5
i/Urj0zN43SQqYnW879p9/2Su+MnjTS2h1JTCGp2rQXXmBNvwPl5HIEXFnsD
FP2K0WRBV0/rj+x6NDW5b9Du3gDGBrr+6jljRhpPEsq6FTF8r4fTa7Cb141/
HMzZtiYPzGLPBrk/lFr+rrWanT9pTx3V3U6kEEgZm7tYDtqMBu3txPw/DuVt
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
F0+gv3zPDY1xq1V8qBR3Z5NP6gEPyBTsYwj2M6j9qQh/T31/YvEn5gsnrSmJ
kCaPXTXL1S+I7/Q23fZNy6Se2pVzibiLTgyGrp417N9im9KHbylVQC0pAfFs
cGUO9tEHSZuVnFoFDW6at3gacf2cSy6s9Di4cjv2rWNGtKC6BRIhKnbh3fGi
Ul5qWc8xKeVP8NAUiacnYfPG2vpGYTEvooBNhflb5VPYKlRJgIoloEXtj4VI
AQb6sZ1yF08jE64AyW45dUizbikxpDHf6jWhYQ17q9fwlbOx0wc4yCzwPL7h
G3hUG6Ttf1G5BpdUKEYhKMcwSJkd4VVsjevgnT4kju0idRo87TZ6OxZ07HYs
kZVK5mbi88biTV6CG9SyKCVw5Qwja1HMgPQ2oaG+SA81PK4TdXKfIAhk4hXk
4GZ2ZAtnZIC9+UtM5/csX43P37WOzkp1Ygh0YEvOlxPNfRsAlCJFNcYr+LiB
4JKjynyVim1EzItc6zfQlXPM18+xJl3hIy3EB8b1mbtK5zuj9+Y7VzH3jkBn
DSk7rqRfXC5Cl4ueO0YMa0Y1rIVKFSdU0n4cWO2KB5ViD1rCAvCo6lSzl3UL
JmXt3khlp4s21Lhtde6nQ9lWdQFXsUdVZzp/gO3fCNQ/h0nvthqpBeOl+Jlo
qfZCEYsoxlWRPzyiOtQlEKgHxNWzFEFiN69CR7ZDR3fCx3bh2WkUjqOrv4J6
hkHNXwMglD1pRacZFh3NI5fFRpq8hLV/m9uxyg102rwMKDmemtaXj64h1g8Q
I/0tI1rlLpxMJ8dLPrcrpzO3/WT+pDcTXQONrGZW6p0+g3PMi/Y3feUdJR9H
iAqb0V+3ay2VdkvycT78FJ57cCXlOw9tpu9UL/f9P/Od/zyPvmcYMmvQo3FV
4vuSQ6IL3AzF7vmJnDvK1v4dNEKq62iVC1k/3glHT4YrtVwbNsQHA7jqFUZM
7kmfPkTn51ivnDEe3GKb3JPr9K67YXVP/QDryNa6xZPp2zcEi0Hct9a1Zh43
qCHdoDoWHmCRyor6yLUopT1Hs5SL7U+F+tpjalm/nmL4dRORk87iNmbPGuaj
9szHXZhJ3djLfzAsC138w7huKTW4kRDmg4QGGEMkFg3L4aZSCr/sUcfrV6Mb
1RQ+6ebevNQRf8EOdNCt3+dPHcB0ft8brhLa1KV7qa1rFxlOH8NuXmPzc8kd
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
VjrbdSjtAV1vnQistZxqxuYjH9Uf+i8XyULi
     "], {{0, 105.}, {100., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->144.],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{Automatic, 134.04921874999988`},
   ImageSizeRaw->{100., 105.},
   PlotRange->{{0, 100.}, {0, 105.}}], "    ", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztXQl8VdWZJy9vzSMECCQGMCEQMBCEGJA1CESIAtEskBDDkoTFVKQYEhAI
WAnWsGixWAVNQZRoSBMii1JttTrj0k6djl2mjjPjjJ06M9qxaot2HMcRmPP/
3jv3nXfffXl3zUvL+36/YzC5yznnO+db/9+5mavvKLvV1q9fv0Y3+09Z7dZ5
DQ2125cMZP9TvrHxtrqN69Yu3Lh5Xd26humr49kvV7C2izV7vxjpoaysrLyK
ioqmaPcjRtGh2tra/WfPnr2Ql5dXGO2+xKh3KY7RsWPH3nvmmWcunThx4uPU
1NSR0e5TjIyRw+FwJicnD8vMzJw4atSoXLSMjIwJ7HfD2d9c4rU5OTmzwXve
Dh48+KbL5fJEq+8x0k7p6enjS0pKNjU1NXW3tra+w/h4UeSpvB0/fvz9ffv2
vbp+/frD7Ocr8r83NDQ8Ee0xxahnSkpKGlJWVrb58OHDb/fEa72tqKhoQ7TH
GKNQGjBgQHJNTc3ekydP/skKvvN2+vTpL8eNGzcz2uONkY9gpxUWFq5pb2//
yEq+i62tre2DQYMGXRHtsV/uNHDgwJTdu3c/31t8F9v+/ftfs9vtjmjPweVK
2dnZ07EP5Xzp6ur67L777nu9sbGxDf57VVXVrurq6hbYbnv27Hm5s7PzvFlr
oK6u7sFoz8PlSHPnzl1+6tSpLzgfDh069FZlZeVOxOtsjHq6F/oCfkFpaWkD
1onRNVBQULCyt8Ydo379iouL6zHvZ86c+WrLli3tkANGnpeWljYacqKjo+MT
Pfzv7u7+HHEEs8YXo/BUXl6+DXyvr68/lpKSkm7msz0eT//t27d36VkDR44c
eTcxMXGwmf35c6A4m91hG5x5tT1zVpkzt3yra07DMc/ilhcSlhz6ZcItj/9b
wvK2/6BWdfy9hKWP/NpTtO9l97wtbc7Jy++2j55TGT907JQ4uztBzbvA+5aW
lpcgu60ajxFbsrm5+Tmr+tWXCDyPH5KV57ymcof7hl3PgM/edd+/pKclrHjq
A8+ie3/onFrTEn9FTn6cXTm+OmPGjJL8/PxyK8cFXwK5HjW8RoyB2Q4/Rpxw
0aJFtyEekJCQkGhl/6JN2Kf2jOk3uwvufMq7ov13PfJ29enPvau+9xH4i+Zd
1fF7b+2pP/V4D7vefWPzs/aseVVx7qQh4rvdbnUywggVFRXdrsTro0eP/mbn
zp2nly9f3jxr1qwlw4YNy4pkY/4lEexl+8iZJe4bd5/zrn32q1Ben/kfyHvX
vM3HHROXNNrHzFtuz5hWFJ929Zz41Ozp1NImzLZfee1Cx5jrVzonld/pmr2x
1VN68A1v7dOfKa0Fz033veIYO3+VWt1gBjHZ/4MDBw78dMOGDY8uXrx4fU5O
Tj7b0wPMen5cnM0WZ4u3x8U7nKy5/M2J+TXrHWaTbVD6eNecTUdD+LTm7P96
Sr79U+e11d+MHzZxrq3/kBG4HvIb+iHSczEXtoTBafEp2dOcucu2e4r2vuSt
6f406B1rn/nSfcPdZ+JTx//ZxVr52LCGmZ5scs2s+7Z73p1PYjzQdxgvmnvh
Pc9hfp15t+wke2jI6Nw4h9sb7f5jTTquKqxNWHbkn+Vy3T2/qdM+anZ5nCtx
kHiPzTtkOOlytr81v8/udEM+uK6rP+Kt7vxEZiO8jzXSF+alJyI5OSKv0DVr
/UOe4gd+4l3Z8aFGe+gibGVmU52FnOxN2Rc0Dlf/gViv2OOBvp27gLVqT792
EXglv8fmTR7mXvjN53Gte+Hu7zM5F6/3/dAV0CXQK+L8wO6wDbgi09jorKE4
z8AU8F2+dnU3NveQF7YBaaN7cxyYX8iooP1X+di/OsYvvi3OqWzfQua75jY+
Ll2//Mn/tA0eOcFIP7B+7KOvq/CUfefvguwCtq8gI40822zCPiW5JdvLBptv
vMxftvUfemVvjMOWNHwM3he055g9Dl+vp/scV5du4nYg7Db8m62Xr/V0D+k5
d+R4iS0xNcO3ts5dkNZX+aNvwVfUOj6ryJ4+dTGzi/9P4HuIXDeyBrC2YCta
OQasMc9N+/9K7Lcrf8OhOE/S0J7ug21Pvh14fnVJvW3giLHempN/dBd+43Q4
O9Bx1YIarBOsNzV9g3yBDUU+ZWAN/EP80DGT9YzVbHJOW7M/iN9M77sL7zqF
OYBPa3gNML85fnhugVX9B4/Jt5Ps7me/ck5esQu+SY/3MbnHdb4r//aH+e/p
d2wNKPEXMp3Z+efhTzDfYpyWfjrGLarDcyXZyHSDbeCV2VqeYTbB5qN4CF+X
tzz+G/i+5NvBph05ozih6onfGlgD9FzmZ91rSf/ZHgXvAuv33AXnlJXNanxS
2Kg05qWP/Jr7f/T7iUsaSR4w/0G83p6Zv8S78sR/+XTFqf+OTx41SWt/Hdk3
rhXjSNBPcU5vktbnmEWwU9wLdnZLfJqycrf8GufU1XsN6AKfLGY60Ir+w64T
YzquGbceQIwi4riZvYuYj5/Pq8W/wV/HM90L7nqa/w4xPUkWMr8ef2c6fJau
PsPewDP4nE+t3ROtGArmCuPkfcGeCOkvs4WM8h8yxuy+wwZDXkZ6B/M75T59
OHJMuPnrPhn80JvwF8W/wa6DTCA/IGFwGu376q4/0PWL7v0h8j/gP2LJevpN
Mgu+Fp/Tmu5PIXP1PMsoyfmP/BdiW8Lf4+HHGeY/mzNT+w3dLcgtxHmY7XaV
qnvdSUPAd1rvOTfdrnSNa/bXH+FriucK3Ivu/QH0hGNCyR34f/uYghW6+8/W
mOfm+1+VbIHSg2+wtdbreDw5/6HXIO/Z3roGfpNr+tr7/XarIR/AbP4jfif5
VMx3UZJbYe/NmnsL+ga7xpY0LEvpGrINBBkNmxC+HP6G+CCtHWbPGRkD4s6C
fX1JT9zRKIXwn++nqrZ/RzOw7y3jP+S1p/hbr0vPvn5bRyRbX7qX2bQ8PuSa
s+mxcNfZBqSNgvznNpoYwwBOgPg/sazB6FiQN5bmnNnean1Ks4j4L/pO2luv
8x/+t7T3me+OPIXae3Etl2fICYa7Djoa8p7k/Ijg2knnpKVbaL8yn97IOECQ
KQkV3/1HSQYo2N9WEvG/YGs7xX0RB5Eak0vUxN+JrfNjv3zUzH/KsTkTEpEP
8TVPf/qpJu/GrgU+R7JXZm9s1TJevt+Y/v+53O4LudbPZ/gYQb9HLAe8mrxi
l5Z3h32P/3kkA9haQC7CjOeqIfgdiHXHD8+9HvpIVUu7eg72BLNZ/laFDAji
P3xd14y6ByBTYVsFNSbHsf7Z868L19/4YZPmedec/cLrs5vPI36neqxszYHv
xLvcim2Rrod/BzsfuRzx984pq+4xc6+SDKh87F/4XDqyb1hjxnOtJmCntPIf
Nm5CRevbPeqUlR0fkk/sDMUuOKevvU96JrP/tcSVnROXbCa9weSXbXBGTqTr
8f6EpYf/HvF60b4gm9jH/2a1747Yt6Bx7ThpRrwcMhX4RPipsHkRwzCljZ6z
jHLrzEfWvP89A1MiyI1A/P66O74r5szj3AOSecwGfIQdoHYuMAccA4LcsNp4
C3jMbUVuA7pm3vag2fyHTIXvxW0a4Fb0Pgs6EnFG5LuRjyd7BzEys5sO+18F
/4PuQ6xMmiOmozgPyVYeOGKsmvkgW95vYyFHpMXGjksYlOqev6OL7i154G8o
t5+/4bDZ/Pf5NAd+LI177PxqPc+BPwt8i5hvtLhZxX+6F3qR8xkYI+l5TPeo
2cOQozx+5Sl98Gd68AiIKcI2oXevaP8d8AReC/x1wqxIsq/+iNb7sc7FmJLK
Oba6GeI/zXPusu24l/yUgJ+kau/5Yz0+W3H4NfO1ziknrAE5RsKRc7OpdfTk
1/rz8JAFWmwAxDUQu+1DfJfx/84nqZ/a+E/3w98jv4/HfNgcIS8ZaU7gR3F7
wYz8I2wR+C58TIRtUamD1BDirTy/mFB57F218WyQPXNmqYB3izbPQ/jPfSg/
/9/Qwn/EIWGvY07ovuquP6jBZ0FueLlPbRIGCfESZ17VXRzLAXlrFp6L7Fse
C6o5+Ue18opiOKTz+9zeD/Cf6TbqK7OnoIe18B9xJtRncXw1m6N/Ala3pzkB
NgO4W69KX18rOcYtXMdxQ8g99RRLVEvwMT2L9/zI6/dvUIeg5j7IIKGGKdr8
VuL/RZ4rg0zTiCfx6fvJy+/m/8/23GvYKz3NCcc0UY7HIswtYWP8tiD8EuBG
jPjtlGsVbJxwucmQfgC/F8AaR5vfIfyDvMe+p76OnlMp4DXUyw/UcHBbgvm1
SrEhTqQr/HsfeBDFuba7E8Q8dzgCbg2xGcgQ/FvOX+RJRdwhcC5G1ptr9sZH
pTU/aekWNfegjtHbV2U/s7u5bKT1ff327+no6yWei6F/33D3GdiDYedj2up9
dC3T0fJYMuLPiF1hHUbGBzrdQZhSZncAEwm9LNYHwM4UfQNgvO1XTr5BDe/k
5Jp123ck/ueWb410PXS/gF03U2Ybbys7PhRx1PaMaTcJ+EdtMgT1KAHf/2w4
/sO/R2zIK/kNgfghchfIdTId+6KaPYqYDGw9yo9z3B+tg85PoP/FNQC5QLhB
ns9nPxEf6ElOKZGIC1LFf7aegUkyif8m8P3cBWCysM8x3yJfZLUQ2vjvz9vQ
v9l4w2Emec5OnD/kG5Gr57wBfkcLT3C/LTlzInISsLPh9xP+X0F/YN8L/s0l
4Khxr6r3MBL1nBp8AfBpniUP/8Ig/yWeABcFW90xvmg9MDCa2tj5q+yj8pdi
vGIuF76aKL/19I/8eB4bgT3B/MiQ+QOmyo/rQn6a5wYJuymsUWDvgRmOH5G3
QKkWrGceRbYZIFsIk+zvL2KYwApF1DeExQlg2piMuTXiu2S5Q728pxqpCcUb
bf3NO5ME+VboWYknBvpIz+D+FuIBiaFnGcPH4LYl/HJuq8HnwHrG3Aq+B2Hd
rMq1Yp0gTybEuigGirNGwt7D5AxyDF7J581fEuk9WGsCBlYX76kmTZZHh39N
de/DJs3zNZXYAHYt/CLoPtrzwTWQuuUTfD7sW843OeYHewt5U0n2K+TmwROq
wfDj+iBT9GD4tRD2E2rM6QwJvLOi9W06F0AB6wJsqRTjYraTGnw58V+/7++r
RRPiV1ifiHH69hvTl6h1gc2mpcnqXg3wXVqjyPeIdk4IZj/lqqlS/T2Tu6Lt
wQm2IGp7fTLk+HtasCNGCfldbpfSuQDMPpLX/lB+028fY62rwQEhringx7TN
K3DnmTNL+bMgq6X1Z14zwnuJ/6jlE31j2MniPGC/878Bs6EUH5TqGIAXlmG6
eoP8uCH/mM5dgP0R1D9eh8ptXDX5TU/SUElnaN1T83d08VoZnF0Q5OMY55tZ
TYqF+GS3X78jP+b37cjuC9jAFCuS1+8jXsjtctRu4h7CILqThiA2RY1dA38N
NqEaO08rgd88R4N8lGgPyuvwgFNU80yqg2A+hmb+w75g+52egTUUwB5Em9+h
fUUch80d9BS3AeGD83NVqD5HiH8qxU3hlwX8hwd/hnwU9g3sXumMt2VH34Et
hBgP6j8gU2A3otYAMR/YHJDZkC3hzhIIzyenW8IhYG/LasdhJyCvwWUDYrqq
ngufMRAzUj2nhKvwYyHIbu57+z7QV8YX2DkUjwvYABL+WvSZCQ+uoNcRBxbG
qK8xn5LWCLPpqQ7s+m0dtE7YXkbtOJ0bxdYZ8rjQyyRfIEtYo5yh389S8gF4
TYpXg+7nRLkobfwDDuqv+RrmtU59kP8+PcVsJW4v89orGkPR3pdgI4v4ecSY
lGKDiGkQ3xa3vEB8Y3sG+hh+CvQu6gHxEzEjxHkQUwVGGfk40YeL2OjcuI7f
w8+k8yIX73mRasigt5jsh08Ysocpf+vDmKEBX6ilHhRnSWiMq15Cv7j+FGMO
fYDnwfzHnDH5y8cKXCTP7cAPpPi8WP/LZIHSHGE/RcL7hyPsE/mZMtAdhGNf
cNfT0J1k24f6PUEtXDwXmEKJf2xM8nqTSARMtcYYIPj/I75PBPuhL/Hfv/e3
dYjnSMEuUzirRmrAverhcSSiPSbU6sHHoBgwzsNjtiN0KeKeVBvBZDnkCZP5
30AtJfJR0LFKdemkv4Wzh4gvGmOSII5JVsnDYP4H1/9Fm+8S7wmvqYCB8u2X
7vMh/EdcaOjYKfo4rGKO/bj/AK9aXtArUzghP8lryzF2vTXFNCfCcyzkv5mx
gbAN/QuHq/LnSR4LuQe6348zsIIQc5ZikFzf4GwjFedNKBHFowI1ND6e6DwL
BP6uBhnQN/lf0/0p9jzseqX8jkjAXUi+IOcFs2Ot8NtFohiS7AxZvXXAyLdI
524xu1HveRKcED+Wn39mMv8pfk16LbdiG3AnJrUm5FRxBoZ4Dk8kEusB0GDP
G5k/NeQ7M+qe52Tr9jywDVqeE586boYYb4M80ytHRPLVfzBfIujsSwX5WvzA
T7j/p4X/8MWM9tEsopgezt3lNhnzA5n+v9bq9/ri9MFn/RLGWEVNIQixHvH8
AuwpM3HkiGEix8Rs5xPwTaAXg9tDP6faOv9Z9Vr4j7gHxcCSho9Bn9U1dr1F
Z5sg7yOeAYQznc2cSyUiH2Tm1w6G7CnE9SKcN4g1GzTftU9/ZgZ2OFw/oUch
U4NbSjrvp+/8Lw36n/UXeGesd8QrVbVlR9+Br2zFGEFUN8NrwvkaNRHHoERY
/wLuImCDzFr/UDg5TjVEwTU6pp0hoJcUzn+xxP5Dbt7KccAeEfuH+KZa3JVe
gs0SMlZmGyrVhWHfiTE+Wiv5tz9s9bmokUgH/3teF6hhFs45lfhv8vlPIeNg
ss53tkeg7hUYBiM1fxHfibyj7MxZasyuE/G/yAfI8G9UD6UVG2oFmcZ/5sdA
tiFvBUyBP6Z8sbf4z8dC9fqBs4ypXhfnPlh19j7lzeXffVgXiA/ivFipRkTy
Uze2Go0bmUUm8N/HX+RohG8f0d5YvOfF3uQ/vRcYL+SIhHN20U+MEbFZK94X
Lh5NWBrxm0HMRkEsWE981yoi/huL//t0nsJ5Bfwc3d7kPyfIIRETQm1V58ew
z+AzmPkuwuDJ4oIha6Hqid/KzxPuC4T1a3z/n7ughKlHXjxa/AfBRidsgOAb
EC9WPPU+fo9vgZjhlwJDFIRBkNs+bH8h3mPGmKwgEVenU/9TrkaM1yMfIX57
B/GGaIxN+g7Hzfe/FsIbZicgDoa8DmoEgAVWYydQPcjgjBzgp7DG4Wso2gBL
Dv0SWKSeatX6AgG3Iuhy3bY/8A6u6eu+BWyF3DcGBjqaY0ReCLwgLIdoH0rt
3AXgqBE/Qq4feFP4E8DtoPaYMCHsd/T9K8KNMd2u+BwffgexaX5ebF8niqNK
defG1oBiA9ZQJZ7NakLcC/EiqhWI9A1ILa2m+zzwQmbX0PQWAUsp81OMxQFE
/Vewtb2vyUDoBfjlwM7BF0cdBOVjZLZCuPVM3wZl+g3rCDyHfo/W987MIvhH
ApZcqWnb9/gGGOoc+vh+IAwPs+GQO4IupO97MpsAfjryctSYj4cYNvKVkB/A
A8F2jHb8zmzCGWJUr4R6SzV7QWFvQPdDT9I3ADXipGPUrx++2Ypvt+IbrviW
K77pim+79mYfYLsAj4D1jrUPrBPiqXQe6tJDv0IOEbKCvgE6f0cXYtnI4yP2
B4zmX9q+sILwDWZ8ixnfZMa3mfGNZnyrWekbzvi2s9X96Y1vVF+uhG+r4xvr
+NY6vrmOb6/jG+xqvtWOb7rj2+5W9g/fpsc36q18x+VMzc3Nz6nhtVJjsv95
q/qVnp4+vqWl5aXy8nLTz0iLUYASExMHHzly5F09/N++fXuXx2Ou/5SSkpJe
X19/7MyZM1/FeN87NGrUqNzu7u7P9ayBjo6OT2pra/enpRn7nnJ2dvb0LVu2
tIPveG5xcXG9WeOLUWQqKChYqVcP8MZsh9dLS0sbILsj1YnBxszKysqrrKzc
eejQobf4M06dOvXF3LlzVZ0vGSNzqa6u7kGja4C3zs7O83v27Hm5oaHhierq
6paqqqpdkBONjY1tWCddXV2fye9pa2v7AHIg2vNwuZLdbnfs37//NbPWgFZb
0mpfIkaRadCgQVdgH/YW39vb2z8qLCxcE63vzMYolBAPOH369JdW8h0xhpqa
mr0DBvR8XnKMokNFRUUbrOD74cOH3y4rK9uclJQ0JNpjjFHPBNtNzr99+/a9
gjgh+/nq8ePH34/A74utra3vNDU1dZeUlGyCXxDtMcVIPblcLs/BgwffFHma
k5MzW7zG4XC4kpOTh2dkZExAHAEtMzNzIvvdMPY3Vd++jVHfpdTU1JEnTpz4
GLw/duzYezE77fKjvLy8QuR64L9Huy8xig5VVFQ0IV4X7X70Rfp/KJHE5A==

     "], {{0, 92.}, {128., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->72],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{Automatic, 131.},
   ImageSizeRaw->{128., 92.},
   PlotRange->{{0, 128.}, {0, 92.}}]}]], "Input",
 CellChangeTimes->{
  3.824484540510354*^9, {3.82448459783534*^9, 
   3.824484599110627*^9}},ExpressionUUID->"8e9307f5-83fe-4d0a-8936-\
50910b355b7e"],

Cell[CellGroupData[{

Cell["\:63d0\:7eb2", "Section",
 CellChangeTimes->{{3.814214554749331*^9, 3.814214555805985*^9}, {
  3.8244846294741964`*^9, 
  3.824484635891917*^9}},ExpressionUUID->"313645d2-d5e9-4ffe-90b1-\
822a70dd1fb5"],

Cell["\:5b66\:4e60\:603b\:7ed3\:548c\:7b54\:7591", "Subsection",
 CellChangeTimes->{{3.8244852447396708`*^9, 
  3.8244852535187197`*^9}},ExpressionUUID->"c9d0b94f-f9fd-47b4-94d9-\
3664ab711696"],

Cell[CellGroupData[{

Cell["\:673a\:5668\:5b66\:4e60\:548c\:4eba\:5de5\:667a\:80fd\:5e94\:7528\:90e8\
\:7f72", "Subsection",
 CellChangeTimes->{{3.814190045950864*^9, 3.814190058625498*^9}, {
  3.8244846480825367`*^9, 3.824484653227909*^9}, {3.824485294348144*^9, 
  3.824485300008916*^9}},ExpressionUUID->"c67f667d-960c-4816-8bec-\
182b0a948582"],

Cell["\:4e91\:8ba1\:7b97\:5e73\:53f0\:90e8\:7f72\:57fa\:672c\:6d41\:7a0b", \
"Item",
 CellChangeTimes->{{3.814190060890821*^9, 3.814190077764764*^9}, {
  3.824484873559984*^9, 
  3.824484882735939*^9}},ExpressionUUID->"6e60729b-9769-43a5-97f1-\
64d298d9595c"],

Cell["\:793a\:4f8b: Web app to style photos", "Item",
 CellChangeTimes->{{3.814190060890821*^9, 3.814190081578105*^9}, {
   3.814212427823605*^9, 3.814212436358727*^9}, 
   3.8244848908887177`*^9},ExpressionUUID->"2dbb0fa7-4653-4196-b884-\
76fdc2565a88"],

Cell["\:793a\:4f8b: Python \:8c03\:7528web API", "Item",
 CellChangeTimes->{{3.814190060890821*^9, 3.814190081578105*^9}, {
  3.814212427823605*^9, 3.8142124613589163`*^9}, {3.8244850966186223`*^9, 
  3.8244851556029563`*^9}},ExpressionUUID->"e22e288b-7c89-4f72-b8d9-\
781131a99f32"],

Cell["\:672c\:5730\:90e8\:7f72: WL engine + Wolfram Client Library for \
Python", "Item",
 CellChangeTimes->{{3.814190060890821*^9, 3.814190081578105*^9}, {
  3.814212427823605*^9, 3.8142124613589163`*^9}, {3.8244850966186223`*^9, 
  3.8244852091594224`*^9}},ExpressionUUID->"e6fd7faa-a1f7-4e9e-a0b2-\
e0c2410a844d"],

Cell["WL \:8c03\:7528\:5916\:90e8\:7a0b\:5e8f: Python/R/Julia", "Item",
 CellChangeTimes->{{3.814190060890821*^9, 3.814190081578105*^9}, {
  3.814212427823605*^9, 3.8142124613589163`*^9}, {3.8244850966186223`*^9, 
  3.8244852191488733`*^9}, {3.824487091159029*^9, 
  3.824487108927145*^9}},ExpressionUUID->"ded38818-b779-4125-ad8a-\
efb648091cee"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:5b66\:4e60\:603b\:7ed3\:548c\:7b54\:7591", "Section",
 CellChangeTimes->{{3.8244862541270556`*^9, 
  3.8244862571523733`*^9}},ExpressionUUID->"3238ad2e-19ab-47fc-a0e2-\
9f504bcd4f2e"],

Cell[CellGroupData[{

Cell["\:76d1\:7763\:5b66\:4e60\:548c\:975e\:76d1\:7763\:5b66\:4e60", "Item",
 CellChangeTimes->{{3.824497960680992*^9, 
  3.824497987968314*^9}},ExpressionUUID->"507e1f30-0204-44b6-a996-\
03d37c15ba09"],

Cell["Classify", "Subitem",
 CellChangeTimes->{{3.824497960680992*^9, 
  3.8244979924475064`*^9}},ExpressionUUID->"5a7fb06f-26ab-44d4-8425-\
161f8422d896"],

Cell["Predict", "Subitem",
 CellChangeTimes->{{3.824497960680992*^9, 
  3.8244980042801113`*^9}},ExpressionUUID->"2628726d-15f3-4a9c-bc21-\
096365fe999e"],

Cell["Nearest", "Subitem",
 CellChangeTimes->{{3.824497960680992*^9, 
  3.824498013024305*^9}},ExpressionUUID->"56c06192-2170-40ec-be23-\
0d38b2e880b0"],

Cell["FindCluster", "Subitem",
 CellChangeTimes->{{3.824497960680992*^9, 3.824498017742947*^9}, {
  3.824499681654935*^9, 
  3.824499681656896*^9}},ExpressionUUID->"647b5368-a037-4308-b900-\
4041f4f95e35"],

Cell["ImageIdentify", "Subitem",
 CellChangeTimes->{{3.824497960680992*^9, 3.824498017742947*^9}, {
  3.8244996839729786`*^9, 
  3.8244996887490244`*^9}},ExpressionUUID->"5aa1b061-7e8a-409f-932c-\
e65cb63b96da"],

Cell["AudioIdentify", "Subitem",
 CellChangeTimes->{{3.824497960680992*^9, 3.824498017742947*^9}, {
  3.8244996839729786`*^9, 
  3.8244996937392054`*^9}},ExpressionUUID->"c3ccffea-0efb-4baf-90bd-\
b4900da666a4"]
}, Open  ]],

Cell["\:795e\:7ecf\:7f51\:7edc\:4ee5\:53caWolfram\:795e\:7ecf\:7f51\:7edc\
\:5e93", "Item",
 CellChangeTimes->{{3.824497960680992*^9, 3.8244979848646464`*^9}, {
  3.8244997037100716`*^9, 
  3.824499714481016*^9}},ExpressionUUID->"35638a62-cbe2-41c1-9afa-\
77d681ed1d45"],

Cell[CellGroupData[{

Cell["GPU\:786c\:4ef6\:5e73\:53f0", "Item",
 CellChangeTimes->{{3.8244853245867896`*^9, 
  3.8244853371646657`*^9}},ExpressionUUID->"499656f1-49e1-4ceb-af06-\
1946fde4cd08"],

Cell[BoxData[
 RowBox[{"<<", "CUDALink`"}]], "Input",
 CellChangeTimes->{{3.8244940138074627`*^9, 3.824494019097387*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"2330cc47-bd31-4b0e-89e4-b190c83853c6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CUDAQ", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8244940214542236`*^9, 3.8244940229142694`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"f5901936-84b0-40bc-97f0-0960c75efb6d"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.8244940379307704`*^9, 3.8244940642572103`*^9}},
 CellLabel->"Out[2]=",ExpressionUUID->"c8064bd7-af52-412c-92fc-4a9089d07140"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CUDADriverVersion", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8244940689620085`*^9, 3.8244940771068015`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"bda1235d-0c40-4e6a-b869-dce0c7df89b1"],

Cell[BoxData["\<\"461.4\"\>"], "Output",
 CellChangeTimes->{{3.8244940753026047`*^9, 3.8244940775966473`*^9}},
 CellLabel->"Out[4]=",ExpressionUUID->"e63066ed-65d1-413f-8df7-e1efd281223b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CUDAInformation", "[", "]"}]], "Input",
 CellChangeTimes->{{3.824494079983361*^9, 3.824494084222719*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"2379a3f6-0198-4a43-b6d4-a76d7ecd7825"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"Name\"\>", "\[Rule]", "\<\"Quadro RTX 3000\"\>"}], ",", 
     RowBox[{"\<\"Clock Rate\"\>", "\[Rule]", "1380000"}], ",", 
     RowBox[{"\<\"Compute Capabilities\"\>", "\[Rule]", "7.5`"}], ",", 
     RowBox[{"\<\"GPU Overlap\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"Maximum Block Dimensions\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1024", ",", "1024", ",", "64"}], "}"}]}], ",", 
     RowBox[{"\<\"Maximum Grid Dimensions\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"2147483647", ",", "65535", ",", "65535"}], "}"}]}], ",", 
     RowBox[{"\<\"Maximum Threads Per Block\"\>", "\[Rule]", "1024"}], ",", 
     RowBox[{"\<\"Maximum Shared Memory Per Block\"\>", "\[Rule]", "49152"}], 
     ",", 
     RowBox[{"\<\"Total Constant Memory\"\>", "\[Rule]", "65536"}], ",", 
     RowBox[{"\<\"Warp Size\"\>", "\[Rule]", "32"}], ",", 
     RowBox[{"\<\"Maximum Pitch\"\>", "\[Rule]", "2147483647"}], ",", 
     RowBox[{"\<\"Maximum Registers Per Block\"\>", "\[Rule]", "65536"}], ",", 
     RowBox[{"\<\"Texture Alignment\"\>", "\[Rule]", "512"}], ",", 
     RowBox[{"\<\"Multiprocessor Count\"\>", "\[Rule]", "30"}], ",", 
     RowBox[{"\<\"Core Count\"\>", "\[Rule]", "1920"}], ",", 
     RowBox[{"\<\"Execution Timeout\"\>", "\[Rule]", "1"}], ",", 
     RowBox[{"\<\"Integrated\"\>", "\[Rule]", "False"}], ",", 
     RowBox[{"\<\"Can Map Host Memory\"\>", "\[Rule]", "True"}], ",", 
     RowBox[{"\<\"Compute Mode\"\>", "\[Rule]", "\<\"Default\"\>"}], ",", 
     RowBox[{"\<\"Texture1D Width\"\>", "\[Rule]", "131072"}], ",", 
     RowBox[{"\<\"Texture2D Width\"\>", "\[Rule]", "131072"}], ",", 
     RowBox[{"\<\"Texture2D Height\"\>", "\[Rule]", "65536"}], ",", 
     RowBox[{"\<\"Texture3D Width\"\>", "\[Rule]", "16384"}], ",", 
     RowBox[{"\<\"Texture3D Height\"\>", "\[Rule]", "16384"}], ",", 
     RowBox[{"\<\"Texture3D Depth\"\>", "\[Rule]", "16384"}], ",", 
     RowBox[{"\<\"Texture2D Array Width\"\>", "\[Rule]", "32768"}], ",", 
     RowBox[{"\<\"Texture2D Array Height\"\>", "\[Rule]", "32768"}], ",", 
     RowBox[{"\<\"Texture2D Array Slices\"\>", "\[Rule]", "2048"}], ",", 
     RowBox[{"\<\"Surface Alignment\"\>", "\[Rule]", "512"}], ",", 
     RowBox[{"\<\"Concurrent Kernels\"\>", "\[Rule]", "True"}], ",", 
     RowBox[{"\<\"ECC Enabled\"\>", "\[Rule]", "False"}], ",", 
     RowBox[{"\<\"TCC Enabled\"\>", "\[Rule]", "False"}], ",", 
     RowBox[{"\<\"Total Memory\"\>", "\[Rule]", "6442450944"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8244940846454816`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"42905025-ff40-482a-8fae-681511149bb4"]
}, Open  ]]
}, Open  ]],

Cell["https://community.wolfram.com/groups/-/m/t/2141352", "Text",
 CellChangeTimes->{
  3.8244962913605843`*^9},ExpressionUUID->"5a2a5a96-7eef-4cbf-95cf-\
61bb602dd78c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:5e94\:7528\:90e8\:7f72", "Section",
 CellChangeTimes->{{3.8142145704767227`*^9, 3.8142145743781557`*^9}, {
   3.814284847253582*^9, 3.814284850931847*^9}, 
   3.824487303405281*^9},ExpressionUUID->"e1f55af1-ead9-4a61-b0f4-\
f7d37e3b643f"],

Cell["\:9009\:62e9\:4e91\:7aef\:90e8\:7f72\:8def\:5f84", "Text",
 CellChangeTimes->{{3.8142056256183443`*^9, 3.8142056389487762`*^9}, {
  3.82449409883254*^9, 
  3.8244941097870197`*^9}},ExpressionUUID->"c213eb50-1f7d-4c16-9504-\
38b266f5b210"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetCloudDirectory", "[", "]"}]], "Input",
 CellChangeTimes->{{3.814201529644651*^9, 3.814201545210907*^9}, {
  3.824487312021495*^9, 3.824487317450837*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"05ddfe73-b783-4208-8734-905bd27308b0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/shenghuiy\"", 
     "https://www.wolframcloud.com/obj/shenghuiy"},
    "HyperlinkURL"], "]"}],
  CloudObject["https://www.wolframcloud.com/obj/shenghuiy"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{{3.824487315607506*^9, 3.8244873186798525`*^9}},
 CellLabel->"Out[11]=",ExpressionUUID->"3ff7de71-ce59-4fac-b230-12be6d86482d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetCloudDirectory", "[", "\"\<MachineLearningExample\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.824487325061896*^9, 3.824487330138068*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"16286ed3-9faa-43ee-9113-475143d99b98"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/shenghuiy/MachineLearningExample\"", 
     "https://www.wolframcloud.com/obj/shenghuiy/MachineLearningExample"},
    "HyperlinkURL"], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/obj/shenghuiy/MachineLearningExample"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.8244873311320906`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"b9c8be96-6f01-4d44-8cc2-e9a47508ae5d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:90e8\:7f72API", "Subsection",
 CellChangeTimes->{{3.814208290789938*^9, 3.814208295673802*^9}, {
  3.814213979556533*^9, 3.814213982932951*^9}, {3.8244873765380187`*^9, 
  3.824487382400262*^9}},ExpressionUUID->"7696150e-1f9a-4ccd-b617-\
f9e45f21d1a1"],

Cell["\:83b7\:53d6\:57ce\:5e02\:5929\:6c14\:4fe1\:606f", "Text",
 CellChangeTimes->{{3.809279453059622*^9, 3.809279454823995*^9}, {
  3.824487421471774*^9, 
  3.8244874258624277`*^9}},ExpressionUUID->"fc29db7a-1412-4f7a-8d49-\
8e0d4d873db0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WeatherData", "[", 
  RowBox[{"\"\<London\>\"", ",", "\"\<Temperature\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8245009644049845`*^9, 3.824500969886619*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"25e75c06-3f08-4783-b064-b2f1b875be16"],

Cell[BoxData[
 TemplateBox[{
  "4.99999`", "\"\[Degree]C\"", "degrees Celsius", "\"DegreesCelsius\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.824500982648394*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"738d86be-7794-4798-913f-0e3407af1bbf"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"api", " ", "=", " ", 
   RowBox[{"APIFunction", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<city\>\"", "->", "\"\<City\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"WeatherData", "[", 
       RowBox[{"#city", ",", "\"\<Temperature\>\""}], "]"}], "&"}]}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.809279319162265*^9, 3.809279359993896*^9}, {
  3.811000672304843*^9, 3.811000674318095*^9}},
 CellTags->"APIFunction",
 CellLabel->"In[6]:=",ExpressionUUID->"5eaf2cca-2eb2-4b86-93b3-23013054dba9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EmbedCode", "[", 
  RowBox[{"api", ",", "\"\<Python\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.824489719768856*^9, 3.824489722721246*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"99a8972f-91f5-4e29-941d-c32e5357ff2f"],

Cell[BoxData[
 InterpretationBox[
  FrameBox[
   PanelBox[
    TagBox[GridBox[{
       {
        StyleBox["\<\"Embeddable Code\"\>", "ControlStyle",
         StripOnInput->False,
         FontSize->Larger,
         FontWeight->Bold,
         FontColor->GrayLevel[0.3]]},
       {
        StyleBox["\<\"Use the files and code below to call the Wolfram Cloud \
function from Python:\"\>",
         StripOnInput->False,
         FontColor->RGBColor[0.23, 0.23, 0.23]]},
       {
        FrameBox[
         TagBox[GridBox[{
            {
             TagBox[GridBox[{
                {
                 StyleBox["\<\"Dependencies\"\>", "ControlStyle",
                  StripOnInput->False,
                  FontWeight->Bold,
                  FontColor->RGBColor[0.33, 0.33, 0.33]]},
                {
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"Install the \"", 
                    
                    TemplateBox[{
                    "\"wolframclient\"", 
                    "https://pypi.org/project/wolframclient"}, 
                    "HyperlinkURL"], "\" library.\""},
                   "RowWithSeparators"],
                  StripOnInput->False,
                  FontColor->RGBColor[0.33, 0.33, 0.33]]},
                {
                 InterpretationBox[
                  TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.1}}}],
                   "Column"],
                  Column[{}, Spacings -> 0.1]]},
                {
                 TagBox[
                  DynamicModuleBox[{Typeset`var$$ = False}, 
                   InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Installation instructions:\"\>",
                    StripOnInput->False,
                    FontWeight->Bold,
                    FontColor->RGBColor[0.33, 0.33, 0.33]]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], 
                    StyleBox["\<\"Installation instructions:\"\>",
                    StripOnInput->False,
                    FontWeight->Bold,
                    FontColor->RGBColor[0.33, 0.33, 0.33]]},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    
                    StyleBox["\<\"The Wolfram client library for Python is \
conveniently installed using command:\"\>",
                    StripOnInput->False,
                    FontColor->RGBColor[0.33, 0.33, 0.33]]},
                    {
                    TagBox[GridBox[{
                    {
                    TemplateBox[{
                    StyleBox[
                    "\"$ \"", FontFamily -> "Courier", Selectable -> False, 
                    FontColor -> RGBColor[0.33, 0.33, 0.33], StripOnInput -> 
                    False], 
                    StyleBox[
                    "\"python -m pip install wolframclient\"", FontFamily -> 
                    "Courier", FontColor -> RGBColor[0.33, 0.33, 0.33], 
                    StripOnInput -> False]},
                    "RowDefault"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.3}}}],
                    "Column"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    Typeset`var$$],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{
                    Style[
                    "Installation instructions:", FontWeight -> Bold, 
                    FontColor -> RGBColor[0.33, 0.33, 0.33]], 
                    Column[{
                    Style[
                    "The Wolfram client library for Python is conveniently \
installed using command:", FontColor -> RGBColor[0.33, 0.33, 0.33]], 
                    Column[{
                    Row[{
                    Style[
                    "$ ", FontFamily -> "Courier", Selectable -> False, 
                    FontColor -> RGBColor[0.33, 0.33, 0.33]], 
                    Style[
                    "python -m pip install wolframclient", FontFamily -> 
                    "Courier", FontColor -> RGBColor[0.33, 0.33, 0.33]]}]}, 
                    Spacings -> 0.3]}]}, False]],
                   DynamicModuleValues:>{}],
                  Setting[#, {0}]& ]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
               
               GridBoxSpacings->{
                "Columns" -> {{0}}, "Rows" -> {0.7, 0.3, 0.3, 0.5, 0.3}}],
              "Column"]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
           GridBoxItemSize->{"Columns" -> {{Fit}}, "Rows" -> {{Fit}}}],
          "Grid"],
         Background->RGBColor[0.96, 0.96, 0.96],
         FrameMargins->{{10, 12}, {10, 10}},
         FrameStyle->RGBColor[0.69, 0.69, 0.69],
         StripOnInput->False]},
       {
        FrameBox[
         TagBox[GridBox[{
            {
             TagBox[GridBox[{
                {
                 TagBox[GridBox[{
                    {
                    StyleBox["\<\"Code\"\>", "ControlStyle",
                    StripOnInput->False,
                    FontWeight->Bold,
                    FontColor->RGBColor[0.33, 0.33, 0.33]]},
                    {
                    StyleBox["\<\"\"\>",
                    StripOnInput->False,
                    FontColor->RGBColor[0.33, 0.33, 0.33]]}
                   },
                   DefaultBaseStyle->"Column",
                   GridBoxAlignment->{"Columns" -> {{Left}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                  "Column"], 
                 ItemBox[
                  ButtonBox["\<\"Copy to Clipboard\"\>",
                   
                   Appearance:>FEPrivate`FrontEndResource[
                    "FEExpressions", "GrayButtonNinePatchAppearance"],
                   BaseStyle->"DialogStyle",
                   
                   ButtonFunction:>CopyToClipboard[
                    "# -*- coding: utf-8 -*-\n\nfrom __future__ import \
absolute_import, print_function, unicode_literals\nfrom \
wolframclient.evaluation import WolframCloudSession\n\ndef call(city):\n    \
\"\"\" Call the API using function input parameter values.\n    If the API \
was deployed with an export formats set to JSON or WXF, the result is often a \
native Python type.\n    \"\"\"\n    with WolframCloudSession() as session:\n \
       api_response = \
session.call('https://www.wolframcloud.com/obj/53889317-ad87-4895-a875-\
b5be91937d29', {'city' : city})\n        return api_response.get()\n"],
                   Evaluator->Automatic,
                   FrameMargins->{{10, 10}, {0, 0}},
                   ImageSize->Automatic,
                   Method->"Queued"],
                  Alignment->Right,
                  StripOnInput->False]}
               },
               AutoDelete->False,
               GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
               GridBoxItemSize->{"Columns" -> {{Fit}}, "Rows" -> {{Fit}}}],
              "Grid"]},
            {
             FrameBox[
              PaneBox[Cell["\<\
# -*- coding: utf-8 -*-

from __future__ import absolute_import, print_function, unicode_literals
from wolframclient.evaluation import WolframCloudSession

def call(city):
    \"\"\" Call the API using function input parameter values.
    If the API was deployed with an export formats set to JSON or WXF, the \
result is often a native Python type.
    \"\"\"
    with WolframCloudSession() as session:
        api_response = \
session.call('https://www.wolframcloud.com/obj/53889317-ad87-4895-a875-\
b5be91937d29', {'city' : city})
        return api_response.get()
\
\>",
                Editable->False,
                Deployed->False,ExpressionUUID->
                "f4379613-b9f8-45cb-bdf8-b6f4a18ce3ef"],
               AppearanceElements->{},
               ImageSize->{
                 Scaled[1], 300},
               Scrollbars->Automatic],
              Background->GrayLevel[1],
              BaseStyle->"StandardForm",
              FrameStyle->RGBColor[0.69, 0.69, 0.69],
              StripOnInput->False]}
           },
           DefaultBaseStyle->"Column",
           GridBoxAlignment->{"Columns" -> {{Left}}},
           GridBoxItemSize->{"Columns" -> {{Fit}}, "Rows" -> {{Fit}}},
           GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {0.2, {0.5}}}],
          "Column"],
         Background->RGBColor[0.96, 0.96, 0.96],
         FrameMargins->{{14, 14}, {14, 10}},
         FrameStyle->RGBColor[0.69, 0.69, 0.69],
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {0.3, 0.4, 0.8, 1.5}}],
     "Column"],
    Background->RGBColor[0.87, 0.87, 0.87],
    BaseStyle->{"Deploy"},
    ImageSize->630],
   Background->RGBColor[0.87, 0.87, 0.87],
   FrameMargins->{{2, 2}, {1, 1}},
   FrameStyle->RGBColor[0.76, 0.76, 0.76],
   RoundingRadius->6,
   StripOnInput->False],
  EmbeddingObject[
   Association[
   "EnvironmentName" -> "Python", "CodeSection" -> 
    Association[
     "Content" -> 
      "# -*- coding: utf-8 -*-\n\nfrom __future__ import absolute_import, \
print_function, unicode_literals\nfrom wolframclient.evaluation import \
WolframCloudSession\n\ndef call(city):\n    \"\"\" Call the API using \
function input parameter values.\n    If the API was deployed with an export \
formats set to JSON or WXF, the result is often a native Python type.\n    \"\
\"\"\n    with WolframCloudSession() as session:\n        api_response = \
session.call('https://www.wolframcloud.com/obj/53889317-ad87-4895-a875-\
b5be91937d29', {'city' : city})\n        return api_response.get()\n", 
      "Title" -> Automatic, "Filename" -> "WolframCloud.py"], 
    "DependenciesSection" -> 
    Association[
     "InstallationList" -> {}, "Description" -> Row[{"Install the ", 
         Hyperlink["wolframclient", "https://pypi.org/project/wolframclient"],
          " library."}, " "], "HowTo" -> 
      Association[
       "InstallationInstuctions" -> 
        "The Wolfram client library for Python is conveniently installed \
using command:", 
        "InstallationCommands" -> {"python -m pip install wolframclient"}]], 
    "CloudObject" -> 
    CloudObject[
     "https://www.wolframcloud.com/obj/53889317-ad87-4895-a875-b5be91937d29"]]\
]]], "Output",
 CellChangeTimes->{3.8244897239075165`*^9, 3.8244941320010276`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"6d44e8ca-0dcd-49f7-b6f6-681475646db5"]
}, Open  ]],

Cell["\:5c06API\:90e8\:7f72\:5230\:4e91\:7aef", "Text",
 CellChangeTimes->{{3.810651784521349*^9, 3.810651813343605*^9}, {
  3.824487504868919*^9, 
  3.8244875127786093`*^9}},ExpressionUUID->"5cc86c08-19c4-402b-ac0b-\
01617f685741"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"weatherReport", " ", "=", " ", 
  RowBox[{"CloudDeploy", "[", 
   RowBox[{"api", ",", "\"\<MLBasics-WeatherReportAPI\>\"", ",", 
    RowBox[{"Permissions", "\[Rule]", "\"\<Public\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.809279599988722*^9, 3.809279617274664*^9}, {
   3.809704056156001*^9, 3.809704061111504*^9}, {3.814208356168393*^9, 
   3.814208358359312*^9}, 3.824487436849351*^9, {3.824490526059428*^9, 
   3.824490527143295*^9}, {3.824491152728382*^9, 3.8244911537618833`*^9}, {
   3.8244963399079022`*^9, 3.824496344257823*^9}},
 CellTags->"CloudDeploy",
 CellLabel->"In[39]:=",ExpressionUUID->"6cf05747-4237-4af9-8920-b26c9d9693fc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/shenghuiy/MLBasics-WeatherReportAPI\"\
", "https://www.wolframcloud.com/obj/shenghuiy/MLBasics-WeatherReportAPI"},
    "HyperlinkURL"], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/obj/shenghuiy/MLBasics-WeatherReportAPI"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{
  3.824487444152817*^9, {3.824490506191472*^9, 3.8244905280208607`*^9}, 
   3.8244911714729548`*^9, 3.8244941472808867`*^9, 3.8244963447269974`*^9},
 CellTags->"CloudDeploy",
 CellLabel->"Out[39]=",ExpressionUUID->"15ec3d30-d2bd-4e67-85f7-9360b1f9402f"]
}, Open  ]],

Cell["\:4f7f\:7528 API ", "Text",
 CellChangeTimes->{
  3.8244875318425045`*^9, {3.8244877203355474`*^9, 3.824487722108766*^9}, {
   3.8244878923784385`*^9, 
   3.824487892672407*^9}},ExpressionUUID->"769544be-42da-439b-a4cb-\
0565bfc2414f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"URLExecute", "[", 
  RowBox[{"weatherReport", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<city\>\"", "\[Rule]", " ", "\"\<London\>\""}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.809279647137733*^9, 3.809279671004011*^9}},
 CellTags->"URLExecute",
 CellLabel->"In[97]:=",ExpressionUUID->"c9b6cbc0-f0e0-43c9-baff-b4a18154fdcd"],

Cell[BoxData[
 TemplateBox[{
  "4.99999`", "\"\[Degree]C\"", "degrees Celsius", "\"DegreesCelsius\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8244886186326337`*^9, 3.824491175600314*^9, 
  3.8244941744098997`*^9, 3.824496353045108*^9, 3.824501183785196*^9},
 CellTags->"URLExecute",
 CellLabel->"Out[97]=",ExpressionUUID->"ff00e0d0-d0b5-42a3-8219-4eb109bd513f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"DeleteObject", "[", "weatherReport", "]"}]], "Input",
 CellChangeTimes->{{3.8244905147136707`*^9, 3.8244905227982626`*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"5f0276c0-34fe-4c5b-8cc5-33d5b578c2a2"],

Cell["\<\
\:76f8\:5f53\:4e8e\[LineSeparator]https://www.wolframcloud.com/obj/shenghuiy/\
MachineLearningExample/MLBasics-WeatherReportAPI?city=London\
\>", "Text",
 CellChangeTimes->{{3.8244888218066816`*^9, 
  3.8244888275386724`*^9}},ExpressionUUID->"951b6823-0255-4b3c-817e-\
5429254cf2e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:7f51\:9875\:8868\:683c\:7248\:672c", "Subsection",
 CellChangeTimes->{{3.814208398105*^9, 3.81420840171651*^9}, {
  3.814213987217784*^9, 3.8142140057825603`*^9}, {3.8244879057010713`*^9, 
  3.824487917893855*^9}, {3.8244889354307137`*^9, 
  3.824488935583603*^9}},ExpressionUUID->"4e4b73c1-72a7-43e5-9ee3-\
396e7c1ad992"],

Cell["\:5efa\:7acb\:4e00\:4e2a\:53ef\:586b\:5199\:7684\:7f51\:7edc\:8868\:683c\
", "Text",
 CellChangeTimes->{{3.7675356432940397`*^9, 3.767535647877577*^9}, {
  3.814289941412363*^9, 3.8142899512103367`*^9}, {3.814290110745674*^9, 
  3.814290121758869*^9}, {3.814290489111395*^9, 3.8142905198013897`*^9}, {
  3.8142916693756123`*^9, 3.814291684754365*^9}, {3.8244889190116158`*^9, 
  3.8244889335321035`*^9}},ExpressionUUID->"69e57710-505a-47d5-9619-\
2297321af50f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"frm", " ", "=", " ", 
   RowBox[{"FormFunction", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<city\>\"", "->", "\"\<City\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"WeatherData", "[", 
       RowBox[{"#city", ",", "\"\<Temperature\>\""}], "]"}], "&"}]}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.814208408438181*^9, 3.814208452690827*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"af2dd62d-fdb5-4d7c-8b99-ba75d5ba1e25"],

Cell[CellGroupData[{

Cell[BoxData["frm"], "Input",
 CellChangeTimes->{{3.8244890106389313`*^9, 3.824489011070309*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"2d8eb5dc-9765-4953-bbbd-c54114d9fc32"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["FormFunction",
    "SummaryHead"], "[", 
   TemplateBox[{
     DynamicModuleBox[{Forms`Format`PackagePrivate`values$$}, 
      DynamicBox[
       ToBoxes[
        If[
         ValueQ[Forms`Format`PackagePrivate`values$$], 
         Column[{
           Panel[
            Style[
             (WeatherData[
              Slot["city"], "Temperature"]& )[
             Forms`Format`PackagePrivate`values$$], "Output", "StandardForm"],
             Background -> White], 
           Item[
            Row[{
              Spacer[0], 
              Forms`Format`PackagePrivate`formCancelButton["Back", 
               Clear[Forms`Format`PackagePrivate`values$$], 
               FormObject[
                Association["city" -> Association["Interpreter" -> "City"]]][
               AppearanceRules, "FormCancelButtonStyle"]]}], Alignment -> 
            Right]}, Alignment -> Right], 
         Forms`Format`PackagePrivate`values$$; Forms`PackageScope`bindForm[
           Forms`PackageScope`changeAppearanceRule[
            FormObject[
             Association["city" -> Association["Interpreter" -> "City"]]], 
            "CancelLabel" -> None], Forms`Format`PackagePrivate`values$$]], 
        StandardForm], ImageSizeCache -> {241., {34.5, 40.5}}, 
       TrackedSymbols :> {Forms`Format`PackagePrivate`values$$}], 
      DynamicModuleValues :> {}]},
    "FormPanel"], "]"}],
  FormFunction[
   FormObject[
    Association["city" -> Association["Interpreter" -> "City"]]], WeatherData[
    Slot["city"], "Temperature"]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.82448901177166*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"9aaef20f-89bc-4a99-8bf0-25056fddd510"]
}, Open  ]],

Cell["\<\
\:7f51\:9875\:4e0a\:90e8\:7f72\:8868\:683c\
\>", "Text",
 CellChangeTimes->{{3.7675356432940397`*^9, 3.767535647877577*^9}, {
  3.814289941412363*^9, 3.8142899512103367`*^9}, {3.814290110745674*^9, 
  3.814290121758869*^9}, {3.814290489111395*^9, 3.8142905198013897`*^9}, {
  3.8142916907400837`*^9, 3.814291697624939*^9}, {3.8244889740919886`*^9, 
  3.824488977003748*^9}},ExpressionUUID->"40747c4f-7772-4ea7-bbc5-\
db164e566c28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"weatherReport1", " ", "=", " ", 
  RowBox[{"CloudDeploy", "[", 
   RowBox[{"frm", ",", "\"\<MLBasics-WeatherReportForm\>\"", ",", 
    RowBox[{"Permissions", "\[Rule]", "\"\<Private\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.814208463334792*^9, 3.814208475190781*^9}, 
   3.824489216050597*^9, {3.8244911258482146`*^9, 3.824491126893747*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"c5579d10-02be-4178-ad43-003248ae81a3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/shenghuiy/MLBasics-WeatherReportForm\"\
", "https://www.wolframcloud.com/obj/shenghuiy/MLBasics-WeatherReportForm"},
    "HyperlinkURL"], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/obj/shenghuiy/MLBasics-WeatherReportForm"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{
  3.8244890174203587`*^9, {3.824489208559722*^9, 3.8244892164937315`*^9}, 
   3.824489365891418*^9, 3.824490467239278*^9, 3.82449113275364*^9, 
   3.824501773109479*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"a0245e20-21db-4db5-bd75-5d07a39fa69a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"DeleteObject", "[", "weatherReport1", "]"}]], "Input",
 CellChangeTimes->{3.824489219716828*^9},
 CellLabel->"In[36]:=",ExpressionUUID->"49ec5f81-b6ce-4621-994d-e56e2604bc85"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:7f51\:9875\:8868\:683c\:7248\:672c(\:7ed3\:679c\:548c\:8f93\:5165\
\:663e\:793a\:5728\:540c\:4e00\:9875)", "Subsection",
 CellChangeTimes->{{3.81420853555201*^9, 3.81420853837554*^9}, {
  3.814214010731709*^9, 3.814214023882657*^9}, {3.81421460118943*^9, 
  3.81421460879379*^9}, {3.8244890679452705`*^9, 
  3.8244890823597383`*^9}},ExpressionUUID->"67709cd1-5daf-4e89-9aa4-\
397c891c8deb"],

Cell["\:4ea7\:751f\:7f51\:9875\:8868\:683c", "Text",
 CellChangeTimes->{{3.7675356432940397`*^9, 3.767535647877577*^9}, {
  3.814289941412363*^9, 3.8142899512103367`*^9}, {3.814290110745674*^9, 
  3.814290121758869*^9}, {3.814290489111395*^9, 3.8142905198013897`*^9}, {
  3.814291704094079*^9, 3.814291708391066*^9}, {3.8244890988535542`*^9, 
  3.824489106323445*^9}},ExpressionUUID->"bf7f09a2-d293-4401-953f-\
cafa3fe629b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"frmpge", " ", "=", " ", 
   RowBox[{"FormPage", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<city\>\"", "->", "\"\<City\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"WeatherData", "[", 
       RowBox[{"#city", ",", "\"\<Temperature\>\""}], "]"}], "&"}]}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.814208553909741*^9, 3.8142085621877327`*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"467f59e1-b202-466d-b77c-76682b564cdc"],

Cell["\:90e8\:7f72\:5230\:4e91\:7aef", "Text",
 CellChangeTimes->{{3.7675356432940397`*^9, 3.767535647877577*^9}, {
  3.814289941412363*^9, 3.8142899512103367`*^9}, {3.814290110745674*^9, 
  3.814290121758869*^9}, {3.814290489111395*^9, 3.8142905198013897`*^9}, {
  3.814291716018826*^9, 3.814291723410221*^9}, {3.8244891136483884`*^9, 
  3.8244891157211065`*^9}},ExpressionUUID->"501cf239-9cf4-48f0-bf96-\
9100e14141ad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"weatherReport2", " ", "=", " ", 
  RowBox[{"CloudDeploy", "[", 
   RowBox[{"frmpge", ",", "\"\<MLBasics-WeatherReportFormpage\>\"", ",", 
    RowBox[{"Permissions", "\[Rule]", "\"\<Private\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.814208572652812*^9, 3.814208576644061*^9}, 
   3.824489126740773*^9, 3.8244892239850273`*^9},
 CellLabel->
  "In[102]:=",ExpressionUUID->"89c49f8a-4a83-4e8f-a412-f3d407df79ae"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/shenghuiy/MLBasics-\
WeatherReportFormpage\"", 
     "https://www.wolframcloud.com/obj/shenghuiy/MLBasics-\
WeatherReportFormpage"},
    "HyperlinkURL"], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/obj/shenghuiy/MLBasics-WeatherReportFormpage"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.8244891278269105`*^9, 3.8244892255250144`*^9, 
  3.8245019016016073`*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"b2fa6ab0-c9ed-4928-b2ed-ba27e3efb0ca"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"DeleteObject", "[", "weatherReport2", "]"}]], "Input",
 CellChangeTimes->{{3.8244891767048693`*^9, 3.8244891850276456`*^9}, 
   3.824489227734736*^9},
 CellLabel->"In[28]:=",ExpressionUUID->"d1ba9bb6-0418-4140-a66d-f577ff0d2c79"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
\:5728\:7f51\:9875\:4e0a\:505a\:56fe\:50cf\:5904\:7406\
\>", "Section",
 CellChangeTimes->{{3.814201303911255*^9, 3.814201307837585*^9}, {
  3.814205607878151*^9, 3.814205611858837*^9}, {3.814211333762743*^9, 
  3.8142113549004307`*^9}, {3.8245022750956645`*^9, 
  3.8245022955208254`*^9}},ExpressionUUID->"7c6e5f5f-fbd9-46a2-b614-\
ab36ed1258db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImageEffect", "[", "]"}]], "Input",
 CellLabel->"In[63]:=",ExpressionUUID->"9720bde6-5d79-4d12-88e1-e1efbd1fe72a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Charcoal\"\>", ",", "\<\"ColorBoosting\"\>", 
   ",", "\<\"ColorTones\"\>", ",", "\<\"Comics\"\>", 
   ",", "\<\"Decolorization\"\>", ",", "\<\"DetailEnhancing\"\>", 
   ",", "\<\"Deuteranopia\"\>", ",", "\<\"EdgeStylization\"\>", 
   ",", "\<\"Embossing\"\>", ",", "\<\"FadedFrame\"\>", ",", "\<\"Frame\"\>", 
   ",", "\<\"GaussianNoise\"\>", ",", "\<\"Jitter\"\>", 
   ",", "\<\"MotionBlur\"\>", ",", "\<\"NestedComposition\"\>", 
   ",", "\<\"Noise\"\>", ",", "\<\"OilPainting\"\>", 
   ",", "\<\"PoissonNoise\"\>", ",", "\<\"Posterization\"\>", 
   ",", "\<\"Protanopia\"\>", ",", "\<\"SaltPepperNoise\"\>", 
   ",", "\<\"Sepia\"\>", ",", "\<\"Solarization\"\>", 
   ",", "\<\"Stippling\"\>", ",", "\<\"TornFrame\"\>", 
   ",", "\<\"Tritanopia\"\>", ",", "\<\"Vignette\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.824497904800078*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"804215a7-7a9b-4627-830b-d314210e5bb4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudDeploy", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FormPage", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<image\>\"", "\[Rule]", "\"\<Image\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<filter\>\"", "\[Rule]", 
        RowBox[{"ImageEffect", "[", "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ImageEffect", "[", 
       RowBox[{"#image", ",", "#filter"}], "]"}], "&"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AppearanceRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Title\>\"", "\[Rule]", "\"\<Style your photo\>\""}], 
       "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   "\"\<MLBasics-PhotoFilter\>\"", ",", "\[IndentingNewLine]", 
   RowBox[{"Permissions", " ", "\[Rule]", " ", "\"\<Private\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8142110677117043`*^9, 3.8142110808855658`*^9}, {
  3.814211111004551*^9, 3.814211111819149*^9}, {3.81421120649343*^9, 
  3.814211241579946*^9}, {3.81421128960942*^9, 3.814211297098468*^9}, {
  3.814211366499915*^9, 3.81421138151861*^9}, {3.814211484990755*^9, 
  3.814211486714876*^9}, {3.814212069185522*^9, 3.814212075202855*^9}, {
  3.8244978598261623`*^9, 3.8244978607796774`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"1411299a-c106-4e7d-a2a2-04398075c48e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/shenghuiy/MLBasics-PhotoFilter\"", 
     "https://www.wolframcloud.com/obj/shenghuiy/MLBasics-PhotoFilter"},
    "HyperlinkURL"], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/obj/shenghuiy/MLBasics-PhotoFilter"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.8244978660894885`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"67501bf7-66d0-499c-be70-0605f7a853ce"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{958, 1028},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"ZHTrainingNB.nb",
ExpressionUUID->"ee0131c8-554f-4ef2-9133-8481e8987376"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "APIFunction"->{
  Cell[65121, 1204, 579, 14, 92, "Input",ExpressionUUID->"5eaf2cca-2eb2-4b86-93b3-23013054dba9",
   CellTags->"APIFunction"]},
 "CloudDeploy"->{
  Cell[79894, 1561, 674, 11, 64, "Input",ExpressionUUID->"6cf05747-4237-4af9-8920-b26c9d9693fc",
   CellTags->"CloudDeploy"],
  Cell[80571, 1574, 668, 14, 35, "Output",ExpressionUUID->"15ec3d30-d2bd-4e67-85f7-9360b1f9402f",
   CellTags->"CloudDeploy"]},
 "URLExecute"->{
  Cell[81520, 1600, 355, 8, 35, "Input",ExpressionUUID->"c9b6cbc0-f0e0-43c9-baff-b4a18154fdcd",
   CellTags->"URLExecute"],
  Cell[81878, 1610, 369, 7, 41, "Output",ExpressionUUID->"ff00e0d0-d0b5-42a3-8219-4eb109bd513f",
   CellTags->"URLExecute"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"APIFunction", 95035, 1944},
 {"CloudDeploy", 95180, 1947},
 {"URLExecute", 95451, 1952}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 461, 8, 168, "Title",ExpressionUUID->"0600c34d-2390-4ee6-9886-5388186f4a92"],
Cell[1044, 32, 363, 6, 54, "Author",ExpressionUUID->"a7481995-99ad-4013-bf43-0847f03f0904"],
Cell[1410, 40, 52027, 865, 149, "Input",ExpressionUUID->"8e9307f5-83fe-4d0a-8936-50910b355b7e"],
Cell[CellGroupData[{
Cell[53462, 909, 208, 4, 67, "Section",ExpressionUUID->"313645d2-d5e9-4ffe-90b1-822a70dd1fb5"],
Cell[53673, 915, 194, 3, 55, "Subsection",ExpressionUUID->"c9d0b94f-f9fd-47b4-94d9-3664ab711696"],
Cell[CellGroupData[{
Cell[53892, 922, 325, 5, 39, "Subsection",ExpressionUUID->"c67f667d-960c-4816-8bec-182b0a948582"],
Cell[54220, 929, 259, 5, 36, "Item",ExpressionUUID->"6e60729b-9769-43a5-97f1-64d298d9595c"],
Cell[54482, 936, 254, 4, 36, "Item",ExpressionUUID->"2dbb0fa7-4653-4196-b884-76fdc2565a88"],
Cell[54739, 942, 283, 4, 36, "Item",ExpressionUUID->"e22e288b-7c89-4f72-b8d9-781131a99f32"],
Cell[55025, 948, 316, 5, 36, "Item",ExpressionUUID->"e6fd7faa-a1f7-4e9e-a0b2-e0c2410a844d"],
Cell[55344, 955, 347, 5, 36, "Item",ExpressionUUID->"ded38818-b779-4125-ad8a-efb648091cee"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[55740, 966, 191, 3, 67, "Section",ExpressionUUID->"3238ad2e-19ab-47fc-a0e2-9f504bcd4f2e"],
Cell[CellGroupData[{
Cell[55956, 973, 202, 3, 36, "Item",ExpressionUUID->"507e1f30-0204-44b6-a996-03d37c15ba09"],
Cell[56161, 978, 155, 3, 28, "Subitem",ExpressionUUID->"5a7fb06f-26ab-44d4-8425-161f8422d896"],
Cell[56319, 983, 154, 3, 28, "Subitem",ExpressionUUID->"2628726d-15f3-4a9c-bc21-096365fe999e"],
Cell[56476, 988, 152, 3, 28, "Subitem",ExpressionUUID->"56c06192-2170-40ec-be23-0d38b2e880b0"],
Cell[56631, 993, 205, 4, 28, "Subitem",ExpressionUUID->"647b5368-a037-4308-b900-4041f4f95e35"],
Cell[56839, 999, 211, 4, 28, "Subitem",ExpressionUUID->"5aa1b061-7e8a-409f-932c-e65cb63b96da"],
Cell[57053, 1005, 211, 4, 28, "Subitem",ExpressionUUID->"c3ccffea-0efb-4baf-90bd-b4900da666a4"]
}, Open  ]],
Cell[57279, 1012, 270, 5, 36, "Item",ExpressionUUID->"35638a62-cbe2-41c1-9afa-77d681ed1d45"],
Cell[CellGroupData[{
Cell[57574, 1021, 173, 3, 36, "Item",ExpressionUUID->"499656f1-49e1-4ceb-af06-1946fde4cd08"],
Cell[57750, 1026, 199, 3, 35, "Input",ExpressionUUID->"2330cc47-bd31-4b0e-89e4-b190c83853c6"],
Cell[CellGroupData[{
Cell[57974, 1033, 201, 3, 35, "Input",ExpressionUUID->"f5901936-84b0-40bc-97f0-0960c75efb6d"],
Cell[58178, 1038, 179, 2, 32, "Output",ExpressionUUID->"c8064bd7-af52-412c-92fc-4a9089d07140"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58394, 1045, 213, 3, 35, "Input",ExpressionUUID->"bda1235d-0c40-4e6a-b869-dce0c7df89b1"],
Cell[58610, 1050, 188, 2, 32, "Output",ExpressionUUID->"e63066ed-65d1-413f-8df7-e1efd281223b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58835, 1057, 207, 3, 35, "Input",ExpressionUUID->"2379a3f6-0198-4a43-b6d4-a76d7ecd7825"],
Cell[59045, 1062, 2701, 45, 185, "Output",ExpressionUUID->"42905025-ff40-482a-8fae-681511149bb4"]
}, Open  ]]
}, Open  ]],
Cell[61773, 1111, 170, 3, 39, "Text",ExpressionUUID->"5a2a5a96-7eef-4cbf-95cf-61bb602dd78c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61980, 1119, 246, 4, 67, "Section",ExpressionUUID->"e1f55af1-ead9-4a61-b0f4-f7d37e3b643f"],
Cell[62229, 1125, 244, 4, 39, "Text",ExpressionUUID->"c213eb50-1f7d-4c16-9504-38b266f5b210"],
Cell[CellGroupData[{
Cell[62498, 1133, 259, 4, 35, "Input",ExpressionUUID->"05ddfe73-b783-4208-8734-905bd27308b0"],
Cell[62760, 1139, 464, 10, 35, "Output",ExpressionUUID->"3ff7de71-ce59-4fac-b230-12be6d86482d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63261, 1154, 247, 4, 35, "Input",ExpressionUUID->"16286ed3-9faa-43ee-9113-475143d99b98"],
Cell[63511, 1160, 512, 11, 35, "Output",ExpressionUUID->"b9c8be96-6f01-4d44-8cc2-e9a47508ae5d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64060, 1176, 260, 4, 55, "Subsection",ExpressionUUID->"7696150e-1f9a-4ccd-b617-f9e45f21d1a1"],
Cell[64323, 1182, 241, 4, 39, "Text",ExpressionUUID->"fc29db7a-1412-4f7a-8d49-8e0d4d873db0"],
Cell[CellGroupData[{
Cell[64589, 1190, 265, 4, 35, "Input",ExpressionUUID->"25e75c06-3f08-4783-b064-b2f1b875be16"],
Cell[64857, 1196, 249, 5, 41, "Output",ExpressionUUID->"738d86be-7794-4798-913f-0e3407af1bbf"]
}, Open  ]],
Cell[65121, 1204, 579, 14, 92, "Input",ExpressionUUID->"5eaf2cca-2eb2-4b86-93b3-23013054dba9",
 CellTags->"APIFunction"],
Cell[CellGroupData[{
Cell[65725, 1222, 244, 4, 35, "Input",ExpressionUUID->"99a8972f-91f5-4e29-941d-c32e5357ff2f"],
Cell[65972, 1228, 13650, 322, 575, "Output",ExpressionUUID->"6d44e8ca-0dcd-49f7-b6f6-681475646db5"]
}, Open  ]],
Cell[79637, 1553, 232, 4, 39, "Text",ExpressionUUID->"5cc86c08-19c4-402b-ac0b-01617f685741"],
Cell[CellGroupData[{
Cell[79894, 1561, 674, 11, 64, "Input",ExpressionUUID->"6cf05747-4237-4af9-8920-b26c9d9693fc",
 CellTags->"CloudDeploy"],
Cell[80571, 1574, 668, 14, 35, "Output",ExpressionUUID->"15ec3d30-d2bd-4e67-85f7-9360b1f9402f",
 CellTags->"CloudDeploy"]
}, Open  ]],
Cell[81254, 1591, 241, 5, 39, "Text",ExpressionUUID->"769544be-42da-439b-a4cb-0565bfc2414f"],
Cell[CellGroupData[{
Cell[81520, 1600, 355, 8, 35, "Input",ExpressionUUID->"c9b6cbc0-f0e0-43c9-baff-b4a18154fdcd",
 CellTags->"URLExecute"],
Cell[81878, 1610, 369, 7, 41, "Output",ExpressionUUID->"ff00e0d0-d0b5-42a3-8219-4eb109bd513f",
 CellTags->"URLExecute"]
}, Open  ]],
Cell[82262, 1620, 226, 3, 35, "Input",ExpressionUUID->"5f0276c0-34fe-4c5b-8cc5-33d5b578c2a2"],
Cell[82491, 1625, 293, 6, 93, "Text",ExpressionUUID->"951b6823-0255-4b3c-817e-5429254cf2e9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82821, 1636, 330, 5, 55, "Subsection",ExpressionUUID->"4e4b73c1-72a7-43e5-9ee3-396e7c1ad992"],
Cell[83154, 1643, 467, 7, 39, "Text",ExpressionUUID->"69e57710-505a-47d5-9619-2297321af50f"],
Cell[83624, 1652, 510, 13, 64, "Input",ExpressionUUID->"af2dd62d-fdb5-4d7c-8b99-ba75d5ba1e25"],
Cell[CellGroupData[{
Cell[84159, 1669, 176, 2, 35, "Input",ExpressionUUID->"2d8eb5dc-9765-4953-bbbd-c54114d9fc32"],
Cell[84338, 1673, 1778, 44, 157, "Output",ExpressionUUID->"9aaef20f-89bc-4a99-8bf0-25056fddd510"]
}, Open  ]],
Cell[86131, 1720, 441, 8, 39, "Text",ExpressionUUID->"40747c4f-7772-4ea7-bbc5-db164e566c28"],
Cell[CellGroupData[{
Cell[86597, 1732, 457, 8, 64, "Input",ExpressionUUID->"c5579d10-02be-4178-ad43-003248ae81a3"],
Cell[87057, 1742, 670, 15, 35, "Output",ExpressionUUID->"a0245e20-21db-4db5-bd75-5d07a39fa69a"]
}, Open  ]],
Cell[87742, 1760, 199, 3, 35, "Input",ExpressionUUID->"49ec5f81-b6ce-4621-994d-e56e2604bc85"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87978, 1768, 398, 6, 55, "Subsection",ExpressionUUID->"67709cd1-5daf-4e89-9aa4-397c891c8deb"],
Cell[88379, 1776, 425, 6, 39, "Text",ExpressionUUID->"bf7f09a2-d293-4401-953f-cafa3fe629b0"],
Cell[88807, 1784, 515, 14, 64, "Input",ExpressionUUID->"467f59e1-b202-466d-b77c-76682b564cdc"],
Cell[89325, 1800, 421, 6, 39, "Text",ExpressionUUID->"501cf239-9cf4-48f0-bf96-9100e14141ad"],
Cell[CellGroupData[{
Cell[89771, 1810, 440, 8, 64, "Input",ExpressionUUID->"89c49f8a-4a83-4e8f-a412-f3d407df79ae"],
Cell[90214, 1820, 595, 15, 35, "Output",ExpressionUUID->"b2fa6ab0-c9ed-4928-b2ed-ba27e3efb0ca"]
}, Open  ]],
Cell[90824, 1838, 253, 4, 35, "Input",ExpressionUUID->"d1ba9bb6-0418-4140-a66d-f577ff0d2c79"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[91126, 1848, 357, 7, 67, "Section",ExpressionUUID->"7c6e5f5f-fbd9-46a2-b614-ab36ed1258db"],
Cell[CellGroupData[{
Cell[91508, 1859, 138, 2, 35, "Input",ExpressionUUID->"9720bde6-5d79-4d12-88e1-e1efbd1fe72a"],
Cell[91649, 1863, 963, 16, 71, "Output",ExpressionUUID->"804215a7-7a9b-4627-830b-d314210e5bb4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92649, 1884, 1383, 29, 232, "Input",ExpressionUUID->"1411299a-c106-4e7d-a2a2-04398075c48e"],
Cell[94035, 1915, 506, 11, 35, "Output",ExpressionUUID->"67501bf7-66d0-499c-be70-0605f7a853ce"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

